<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.5.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-11-03T15:14:42-05:00</updated><id>http://localhost:4000/</id><title type="html">Get started learning technology in Austin. :)</title><subtitle>This is .</subtitle><entry><title type="html">Arduino LCD Screen Workbook</title><link href="http://localhost:4000/arduino/arduino-lcd/" rel="alternate" type="text/html" title="Arduino LCD Screen Workbook" /><published>2017-10-25T00:00:00-05:00</published><updated>2017-10-25T00:00:00-05:00</updated><id>http://localhost:4000/arduino/arduino-lcd</id><content type="html" xml:base="http://localhost:4000/arduino/arduino-lcd/">&lt;h2 id=&quot;project-kit&quot;&gt;Project Kit&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-10-25-arduino-lcd/kit.jpg&quot; alt=&quot;Project Kit Coming Soon&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;bill-of-materials&quot;&gt;Bill of Materials&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;1 x Arduino Uno&lt;/li&gt;
  &lt;li&gt;4 x jumper wires (male to female)&lt;/li&gt;
  &lt;li&gt;1 x usb type b cable&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;steps&quot;&gt;Steps&lt;/h2&gt;

&lt;p&gt;Before you begin be sure you have the &lt;a href=&quot;https://www.arduino.cc/en/Main/Software&quot;&gt;arduino ide&lt;/a&gt; installed.  You might want to review the &lt;a href=&quot;https://docs.google.com/presentation/d/1NVXJuoGbR-pNWjyHMJpdIDgtxiLFyZJTAl8aILhjp4g/edit?usp=sharing&quot;&gt;class presentation&lt;/a&gt;
if you found this on the internet.&lt;/p&gt;

&lt;p&gt;1) Turn the lcd screen on it’s back side and notice that it 4 pins connected to it.  You can read more about it &lt;a href=&quot;http://i2c.info/i2c-bus-specification&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ground (gnd)&lt;/li&gt;
  &lt;li&gt;vcc (volts / +)&lt;/li&gt;
  &lt;li&gt;sda (Serial Data Line)&lt;/li&gt;
  &lt;li&gt;slc ( Serial Clock Line)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-10-25-arduino-lcd/step1.jpg&quot; alt=&quot;step1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;2) Take one of the wires and plug it into ground of the lcd screen and ground of the arduino.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-10-25-arduino-lcd/step2.jpg&quot; alt=&quot;step2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;3) Take one of the wires and plug it into vcc of the lcd screen and 5v of the arduino.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-10-25-arduino-lcd/step3.jpg&quot; alt=&quot;step3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;4) Take one of the wires and plug it into sda of the lcd screen and A4 of the arduino.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-10-25-arduino-lcd/step4.jpg&quot; alt=&quot;step4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;5) Take one of the wires and plug it into scl of the lcd screen and A5 of the arduino.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-10-25-arduino-lcd/step5.jpg&quot; alt=&quot;step5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;6) Take the arduino and plug it into the computer.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-10-25-arduino-lcd/step6.jpg&quot; alt=&quot;step6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;7) Open the arduino ide and paste in this code.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include &amp;lt;Wire.h&amp;gt;

#include &amp;lt;LiquidCrystal_I2C.h&amp;gt;

LiquidCrystal_I2C lcd(0x3F, 4, 20);

void setup() {
    lcd.init();
}


void loop() {
  lcd.backlight();
  delay(1000);
  lcd.noBacklight();
  delay(1000);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;8) Open the tools -&amp;gt; ports and select the arduino connected to the usb port.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-10-25-arduino-lcd/step8.png&quot; alt=&quot;step8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;9) Then click the upload button and upload your sketch to the arduino. (The upload button looks like an arrow.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-10-25-arduino-lcd/step9.png&quot; alt=&quot;step9&quot; /&gt;&lt;/p&gt;

&lt;p&gt;10) Now the backlight should go on and off every 1 second.  If you want to see the text you will have to keep the back light on.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-10-25-arduino-lcd/step10a.jpg&quot; alt=&quot;step9&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-10-25-arduino-lcd/step10b.jpg&quot; alt=&quot;step9&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now we are going to learn how to print something on screen.  So in the lcd is a grid system that is 0 based.  Meaning the number start a 0.  The lcd that we are using for this class has 4 rows and 20 columns.  A column is on the x axis, meaning it is used to specify something to the left or to the right.  A row is on the y axis, meaning it is used to specify something up or down.  This is not like a normal numbering system because as you go down the y axis numbers go up.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/lcd-grid-numbered.png&quot; alt=&quot;lcd grid&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(Challenge) Can you tell me the column and row position of the colored blocks.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/lcd-grid-marked.png&quot; alt=&quot;lcd marked grid&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can set the position to print using lcd.setCursor(column, row).  You use lcd.print(“say something””) to print stuff onto the screen.&lt;/p&gt;

&lt;p&gt;11) Copy the code and paste it into the arduino ide.  Then upload the sketch to the arduno.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include &amp;lt;Wire.h&amp;gt;

#include &amp;lt;LiquidCrystal_I2C.h&amp;gt;

LiquidCrystal_I2C lcd(0x3F, 4, 20);

void setup() {
    lcd.init();
    lcd.backlight();
    lcd.setCursor(0, 0);
    lcd.print(&quot;What is your name?&quot;);
}


void loop() {
  
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;12) (Challenge) Can you print your name on the second row of the lcd screen.&lt;/p&gt;

&lt;p&gt;So now we are going to build off what we did in the last class.  We are going to hook up the pir sensor and have it display the number of times it sensed something.&lt;/p&gt;

&lt;p&gt;13) Look at the back of the sensor and notice that it has S, +, -.  S is the sensing pin, + is the volts / positive pin, and - is the ground / negative pin.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-10-25-arduino-lcd/step13.jpg&quot; alt=&quot;step13&quot; /&gt;&lt;/p&gt;

&lt;p&gt;14) Take a male to female jumper wire and plug end into the S pin of the sensor and the other end into pin 2 of the arduino.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-10-25-arduino-lcd/step14a.jpg&quot; alt=&quot;step14&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-10-25-arduino-lcd/step14b.jpg&quot; alt=&quot;step14&quot; /&gt;&lt;/p&gt;

&lt;p&gt;15) Take a male to female jumper wire and plug end into the + pin of the sensor and the other end into pin 3.3 volts of the arduino.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-10-25-arduino-lcd/step15a.jpg&quot; alt=&quot;step15&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-10-25-arduino-lcd/step15b.jpg&quot; alt=&quot;step15&quot; /&gt;&lt;/p&gt;

&lt;p&gt;16) Take a male to female jumper wire and plug end into the - pin of the sensor and the other end into pin ground / - of the arduino.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-10-25-arduino-lcd/step16a.jpg&quot; alt=&quot;step15&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-10-25-arduino-lcd/step16b.jpg&quot; alt=&quot;step15&quot; /&gt;&lt;/p&gt;

&lt;p&gt;17) Now we are going to write some code.  Copy the code onto the screen.  What this will do is increase the number on the screen by 1 every second.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include &amp;lt;Wire.h&amp;gt;

#include &amp;lt;LiquidCrystal_I2C.h&amp;gt;

LiquidCrystal_I2C lcd(0x3F, 4, 20);
const String starterText = &quot;I see you: &quot;;

int counter = 0;
void setup() {
    lcd.init();
    lcd.backlight();
    lcd.setCursor(0, 0);
    lcd.print(starterText);
}


void loop() {
   counter += 1;
   lcd.setCursor(starterText.length(), 0);
   lcd.print(counter);
   delay(1000);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Side Note:  The only other function I wanted to go over is lcd.clear().  This function will clear all the text on the screen.&lt;/p&gt;

&lt;p&gt;18) (Challenge) Use what you learned in the &lt;a href=&quot;http://localhost:4000/arduino/arduino-passive-motion-sensor/&quot;&gt;last lesson&lt;/a&gt; to hook the sensor to print the number of times the sensor has sensed something.  Always ask questions!!!&lt;/p&gt;

&lt;h2 id=&quot;challenge-projects&quot;&gt;Challenge Projects&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;Make this piece of text go back and worth _&lt;/td&gt;
          &lt;td&gt;_/.&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Use the serial monitor to print stuff to the lcd screen. &lt;a href=&quot;https://www.arduino.cc/en/Reference/Serial&quot;&gt;Serial Monitor&lt;/a&gt;.  Hint use this function: &lt;a href=&quot;https://www.arduino.cc/en/Serial/ReadStringUntil&quot;&gt;ReadStringUntil&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Have fun you earned it!!!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;resources&quot;&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://playground.arduino.cc/Code/PIRsense&quot;&gt;PIR Sensor&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.arduino.cc/en/Reference/LiquidCrystal&quot;&gt;LCD Library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Arduino LCD Screen Workbook Work Book.</summary></entry><entry><title type="html">Arduino LCD Screen Workbook With Blocks</title><link href="http://localhost:4000/arduino_block/arduino-lcd/" rel="alternate" type="text/html" title="Arduino LCD Screen Workbook With Blocks" /><published>2017-10-25T00:00:00-05:00</published><updated>2017-10-25T00:00:00-05:00</updated><id>http://localhost:4000/arduino_block/arduino-lcd</id><content type="html" xml:base="http://localhost:4000/arduino_block/arduino-lcd/">&lt;h2 id=&quot;project-kit&quot;&gt;Project Kit&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/kit.jpg&quot; alt=&quot;Project Kit Coming Soon&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;bill-of-materials&quot;&gt;Bill of Materials&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;1 x Arduino Uno&lt;/li&gt;
  &lt;li&gt;4 x jumper wires (male to female)&lt;/li&gt;
  &lt;li&gt;1 x usb type b cable&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;steps&quot;&gt;Steps&lt;/h2&gt;

&lt;p&gt;Before you begin be sure you have the &lt;a href=&quot;https://www.arduino.cc/en/Main/Software&quot;&gt;arduino ide&lt;/a&gt; installed.  You might want to review the &lt;a href=&quot;https://docs.google.com/presentation/d/1NVXJuoGbR-pNWjyHMJpdIDgtxiLFyZJTAl8aILhjp4g/edit?usp=sharing&quot;&gt;class presentation&lt;/a&gt;
if you found this on the internet.&lt;/p&gt;

&lt;h4 id=&quot;testing-setup&quot;&gt;Testing Setup&lt;/h4&gt;

&lt;p&gt;1) Turn the lcd screen on it’s back side and notice that it 4 pins connected to it.  You can read more about it &lt;a href=&quot;http://i2c.info/i2c-bus-specification&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ground (gnd)&lt;/li&gt;
  &lt;li&gt;vcc (volts / +)&lt;/li&gt;
  &lt;li&gt;sda (Serial Data Line)&lt;/li&gt;
  &lt;li&gt;slc ( Serial Clock Line)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step1.jpg&quot; alt=&quot;step1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;2) Take one of the wires and plug it into ground of the lcd screen and ground of the arduino.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step2.jpg&quot; alt=&quot;step2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;3) Take one of the wires and plug it into vcc of the lcd screen and 5v of the arduino.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step3.jpg&quot; alt=&quot;step3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;4) Take one of the wires and plug it into sda of the lcd screen and A4 of the arduino.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step4.jpg&quot; alt=&quot;step4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;5) Take one of the wires and plug it into scl of the lcd screen and A5 of the arduino.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step5.jpg&quot; alt=&quot;step5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;6) Take the arduino and plug it into the computer.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step6.jpg&quot; alt=&quot;step6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;7) Drag the Big Lcd Block onto the screen.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step7a.png&quot; alt=&quot;step7&quot; /&gt;
&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step7b.png&quot; alt=&quot;step8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;8) Type something into each text block.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step8.png&quot; alt=&quot;step8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;9) Upload the code to the arduino.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step9a.png&quot; alt=&quot;step9&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step9b.jpg&quot; alt=&quot;step9&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Great! We have just confirmed that our setup works and that we can write to the screen.  This simple allows us to 
print simple stuff to screen, but we are going to learn how to get more control.&lt;/p&gt;

&lt;h4 id=&quot;how-to-control-the-back-light-of-the-lcd-screen&quot;&gt;How to control the back light of the lcd screen.&lt;/h4&gt;

&lt;p&gt;10) Drag the back light block on to the screen.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step10a.png&quot; alt=&quot;step10&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step10b.png&quot; alt=&quot;step10&quot; /&gt;&lt;/p&gt;

&lt;p&gt;11) Drag the delay block onto the screen and connect it to the Back Light block.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step11a.png&quot; alt=&quot;step11&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step11b.png&quot; alt=&quot;step11&quot; /&gt;&lt;/p&gt;

&lt;p&gt;12) Drag another back light block and connect it to the delay block and set it off.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step12.png&quot; alt=&quot;step12&quot; /&gt;&lt;/p&gt;

&lt;p&gt;13) Drag another delay block and connect it to the bottom of the blocks.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step13.png&quot; alt=&quot;step13&quot; /&gt;&lt;/p&gt;

&lt;p&gt;14) Upload the code the arduino.  You should see the back light turn on and off every second.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step14a.png&quot; alt=&quot;step14&quot; /&gt;
&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step14b.jpg&quot; alt=&quot;step14&quot; /&gt;
&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step14c.jpg&quot; alt=&quot;step14&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;how-lcd-grid-system-works&quot;&gt;How LCD Grid System Works&lt;/h4&gt;

&lt;p&gt;LCD screens have an x and y axis.  As you go to right the x axis number increase and as you go down the y number axis
 increases.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/lcd-grid-numbered.png&quot; alt=&quot;lcd&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To specify a point you put in the x axis then the y axis. For example the red point would be (1, 3).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/lcd-grid-marked.png&quot; alt=&quot;lcd&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(Challenge) Can you tell me what the green point would be.&lt;/p&gt;

&lt;h4 id=&quot;how-to-print-something-on-the-screen-manually-and-clear-the-screen&quot;&gt;How to print something on the screen manually and clear the screen.&lt;/h4&gt;

&lt;p&gt;To position where to print you need to set the cursor.  The cursor is where the position where the words will start 
printing on the lcd screen.&lt;/p&gt;

&lt;p&gt;15) Delete all the blocks on the screen and drag the set position block onto the screen.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step15a.png&quot; alt=&quot;step15&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step15b.png&quot; alt=&quot;step15&quot; /&gt;&lt;/p&gt;

&lt;p&gt;16) Drag the math number block and put it into row and column slots.  For the column set the first number block to 1,
 and set the second column slot number block 4.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step16a.png&quot; alt=&quot;step16&quot; /&gt;
&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step16b.png&quot; alt=&quot;step16&quot; /&gt;&lt;/p&gt;

&lt;p&gt;17) Drag the print block and connect it to the set position block.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step17a.png&quot; alt=&quot;step17&quot; /&gt;
&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step17b.png&quot; alt=&quot;step17&quot; /&gt;&lt;/p&gt;

&lt;p&gt;18) Drag the text block onto the screen and hook it into the lcd print block.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step18a.png&quot; alt=&quot;step18&quot; /&gt;
&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step18b.png&quot; alt=&quot;step18&quot; /&gt;&lt;/p&gt;

&lt;p&gt;19) Type Hello World into the text block.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step19.png&quot; alt=&quot;step19&quot; /&gt;&lt;/p&gt;

&lt;p&gt;20) Upload the code to the arduino.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step20a.png&quot; alt=&quot;step20&quot; /&gt;
&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step20b.jpg&quot; alt=&quot;step20&quot; /&gt;&lt;/p&gt;

&lt;p&gt;21) Now drag the delay block and put that onto the screen.  Change the number in the delay block to 5000.  That will 
make the program pause for 5 seconds.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step21.png&quot; alt=&quot;step20&quot; /&gt;&lt;/p&gt;

&lt;p&gt;22) Drag the clear block on screen.  This block will make the screen blank.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step22a.png&quot; alt=&quot;step22&quot; /&gt;
&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step22b.png&quot; alt=&quot;step22&quot; /&gt;&lt;/p&gt;

&lt;p&gt;23) Drag the delay block and connect it to the clear block.  Then put 5000 into the delay block.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step23.png&quot; alt=&quot;step23&quot; /&gt;&lt;/p&gt;

&lt;p&gt;24) Upload the arduino code.  Notice that after 5 second hello world goes away.  Then it appears 5 seconds later.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step24a.png&quot; alt=&quot;step24&quot; /&gt;
&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step24b.jpg&quot; alt=&quot;step24&quot; /&gt;
&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step24c.jpg&quot; alt=&quot;step24&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;count-loop-block--for-loop-block&quot;&gt;Count Loop Block / For Loop Block&lt;/h4&gt;

&lt;p&gt;So we going to learn about count loops also known as for loops.  A count loops has three parts:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Start Number: The starting number of the loop&lt;/li&gt;
  &lt;li&gt;End Number: The ending number of the loop&lt;/li&gt;
  &lt;li&gt;Step Number: The number to increase the starting number every time the blocks inside the loop is executed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let’s see how this works with a simple demo:&lt;/p&gt;

&lt;p&gt;25) Drag the count loop block onto the screen.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step25a.png&quot; alt=&quot;step25&quot; /&gt;
&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step25b.png&quot; alt=&quot;step25&quot; /&gt;&lt;/p&gt;

&lt;p&gt;26) Drag the debug block inside the count loop block.  The Debug Block will pause the program and print the variables
 to logout.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step26a.png&quot; alt=&quot;step26&quot; /&gt;
&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step26b.png&quot; alt=&quot;step26&quot; /&gt;&lt;/p&gt;

&lt;p&gt;27) Now click the reset button and upload a blank sketch to the arduino.  This is clear out any old code in the arduino.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step27.png&quot; alt=&quot;step27&quot; /&gt;&lt;/p&gt;

&lt;p&gt;28) Once it has successfully loaded, upload the code to the arduino.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step28a.png&quot; alt=&quot;step28&quot; /&gt;&lt;/p&gt;

&lt;p&gt;29) Open the Logging \ Debugging window and notice the debug block is black and high lighted.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step29a.png&quot; alt=&quot;step29&quot; /&gt;&lt;/p&gt;

&lt;p&gt;30) You can now see that the program has stopped and has printed value and name of the variable.  In our case the 
name of the variable is i and the value is 1.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step30.png&quot; alt=&quot;step30&quot; /&gt;&lt;/p&gt;

&lt;p&gt;31) Click the continue block and notice the value for i changed to 2.  Continue to click the continue block until i 
equals 10.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step31.png&quot; alt=&quot;step31&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(Challenge) Create a loop using the debug blocks that will start at 10 and go to 50.&lt;/p&gt;

&lt;p&gt;(Challenge) Create a loop using the debug blocks that will start at 2 and go 20 but will only print out even numbers.&lt;/p&gt;

&lt;h4 id=&quot;making-something-scroll-left-to-right&quot;&gt;Making something scroll left to right&lt;/h4&gt;

&lt;p&gt;We want to scroll you rock on the screen.  So we are going to at position print at position (0,0) and stop at 
position (11, 0).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/lcd-you-rock-start.png&quot; alt=&quot;lcd you rock start&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/lcd-you-rock-end.png&quot; alt=&quot;lcd you rock end&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(Challenge) See if you can print “You Rock!” starting at position (0,0).  See if you can do that as the without looking.&lt;/p&gt;

&lt;p&gt;32) Drag the count block and connect it to the challenge block.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step32.png&quot; alt=&quot;step32&quot; /&gt;&lt;/p&gt;

&lt;p&gt;33) Drag the right scroll block inside the loop.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step33a.png&quot; alt=&quot;step33&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step33b.png&quot; alt=&quot;step33&quot; /&gt;&lt;/p&gt;

&lt;p&gt;34) Drag the delay block inside the for loop.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step34.png&quot; alt=&quot;step34&quot; /&gt;&lt;/p&gt;

&lt;p&gt;35) Upload the code the arduino and watch the words scroll on the screen.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step35a.png&quot; alt=&quot;step35&quot; /&gt;
&lt;img src=&quot;/images/arduino-block/2017-10-25-arduino-lcd/step35.gif&quot; alt=&quot;step35&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(Challenge) Try to copy and paste the count block and make it scroll back to the left.&lt;/p&gt;

&lt;h2 id=&quot;challenge-projects&quot;&gt;Challenge Projects&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Play with with the blink block and make it blink move around the screen&lt;/li&gt;
  &lt;li&gt;Connect the passive motion sensor and print the number of times passive motion sensor sensed something&lt;/li&gt;
  &lt;li&gt;Have fun and do your own thing.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;resources&quot;&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://playground.arduino.cc/Code/PIRsense&quot;&gt;PIR Sensor&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.arduino.cc/en/Reference/LiquidCrystal&quot;&gt;LCD Library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Arduino LCD Screen Workbook Work Book.</summary></entry><entry><title type="html">Passive Motion Sensor (PIR) With Blocks</title><link href="http://localhost:4000/arduino_block/passive-motion-sensor/" rel="alternate" type="text/html" title="Passive Motion Sensor (PIR) With Blocks" /><published>2017-10-14T00:00:00-05:00</published><updated>2017-10-14T00:00:00-05:00</updated><id>http://localhost:4000/arduino_block/passive-motion-sensor</id><content type="html" xml:base="http://localhost:4000/arduino_block/passive-motion-sensor/">&lt;h2 id=&quot;project-kit-for-the-workbook&quot;&gt;Project Kit For the Workbook&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/kit.jpg&quot; alt=&quot;kit&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;bill-of-materials&quot;&gt;Bill of Materials&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;1 x Arduino Uno&lt;/li&gt;
  &lt;li&gt;1 x led&lt;/li&gt;
  &lt;li&gt;1 x 220 Ohm Resistor&lt;/li&gt;
  &lt;li&gt;3 x jumper wires m to m&lt;/li&gt;
  &lt;li&gt;3 x jumper wire m to f&lt;/li&gt;
  &lt;li&gt;1 x passive motion sensor&lt;/li&gt;
  &lt;li&gt;1 x breadboard&lt;/li&gt;
  &lt;li&gt;1 x usb type b cable&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;steps&quot;&gt;Steps&lt;/h2&gt;

&lt;p&gt;If you have not setup your block environment go &lt;a href=&quot;http://learntechaustin.com/arduino_block/input-output/&quot;&gt;here&lt;/a&gt; and do steps 1 through 4.&lt;/p&gt;

&lt;p&gt;1) Open a command prompt / terminal and type in:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd ~/Desktop/ArduinoBlocks/ 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step5.png&quot; alt=&quot;step1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;2) In the command prompt type:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sh start.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step6.png&quot; alt=&quot;step2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;3) Now open your &lt;a href=&quot;http://127.0.0.1:3000/&quot;&gt;Block Environment&lt;/a&gt;, http://127.0.0.1:3000/.  Click on Discard if you see blocks on the screen.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step3.png&quot; alt=&quot;step3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;4) Plug your arduino into the computer.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step4a.jpg&quot; alt=&quot;step4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step4a.jpg&quot; alt=&quot;step4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;5) (Challenge) Can you make built in led (pin 13) blink every second like we did in the first class.  Ask if you need help.  This is a test step, meaning that we want to test something small before we build something big.  It’a good habit to get into.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step5a.jpg&quot; alt=&quot;step5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step5b.jpg&quot; alt=&quot;step5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;6) Take the long end of the led and plug it into (3,e) of the breadboard and plug the short end of the led into (5, e).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step6.jpg&quot; alt=&quot;step6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;7) Take one end of the resistor and plug it into (3, d) and take the other end of the resistor and plug it into (1, b).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step7.jpg&quot; alt=&quot;step7&quot; /&gt;&lt;/p&gt;

&lt;p&gt;8) Take a  male to male jumper wire and plug it into (1,a) of the breadboard. Take other end and plug it into pin 7 of the arduino.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step8.jpg&quot; alt=&quot;step8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;9) Take a male to male jumper wire and plug it into (5, a) of the breadboard. Take the other end and plug it into ground (gnd) of the arduino.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step9.jpg&quot; alt=&quot;step8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;10) (Challenge) Can you take the current program and change it make the led on the breadboard blink.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step10a.jpg&quot; alt=&quot;step10&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step10b.jpg&quot; alt=&quot;step10&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now we are going to hook up the motion sensor.  This motion sensor will send electricity from the S pin to the arduino if it senses&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/back-sensor.jpg&quot; alt=&quot;back of sensor&quot; /&gt;&lt;/p&gt;

&lt;p&gt;11) Take a male to female jumper wire and plug one side into the S pin and the other side into pin 2 of the arduino.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step11.jpg&quot; alt=&quot;step11&quot; /&gt;&lt;/p&gt;

&lt;p&gt;12) Take a male to female jumper wire and plug one side into the + side of the sensor. Take the other side of the wire and plug it into 3.3 volts of the arduino.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step12.jpg&quot; alt=&quot;step12&quot; /&gt;&lt;/p&gt;

&lt;p&gt;13) Take a male to female jumper wire and plug one side into the - and the other side into ground (gnd) of the arduino.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step13.jpg&quot; alt=&quot;step13&quot; /&gt;&lt;/p&gt;

&lt;p&gt;14) Go back to the block webpage and clear out all the blocks on the page.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step14.png&quot; alt=&quot;step14&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We are going to logout the output of pin 2 to see what happens when something is sensed.  But before we do stand up and take 5 deep breaths.  You are doing great!!!&lt;/p&gt;

&lt;p&gt;15) Drag the digital read block from the Input/Output toolbox on the screen.  Set it to pin 2.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step15a.png&quot; alt=&quot;step15&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step15b.png&quot; alt=&quot;step15&quot; /&gt;&lt;/p&gt;

&lt;p&gt;16) Drag the Serial Print Block onto the screen and hook it into the DigitalRead block. Besure and delete the green quotes block.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step16a.png&quot; alt=&quot;step16&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step16b.png&quot; alt=&quot;step16&quot; /&gt;&lt;/p&gt;

&lt;p&gt;17) Drag the delay block and set the number to 100 milli seconds.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step17a.png&quot; alt=&quot;step17&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step17b.png&quot; alt=&quot;step17&quot; /&gt;&lt;/p&gt;

&lt;p&gt;18) Click the upload button to upload the code the arduino.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step18.png&quot; alt=&quot;step18&quot; /&gt;&lt;/p&gt;

&lt;p&gt;19) Click on logging / debgging to make the serial monitor appear.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step19.png&quot; alt=&quot;step19&quot; /&gt;&lt;/p&gt;

&lt;p&gt;20) Notice that serial monitor is prints 0.  Put your hand over the arduino.  Notice that the serial monitor says 1.  Based on this we know that if it senses something it will equal 1.  Otherwise it will equal 0.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step20.png&quot; alt=&quot;step20&quot; /&gt;&lt;/p&gt;

&lt;p&gt;21) (Challenge) Try to build a program from scratch that will turn on the led when it senses something and turn it off when it does not sense anything.  This is very similar to the code your wrote in first lesson.  Ask questions if you need help.&lt;/p&gt;

&lt;p&gt;22) (Challenge) See how far way an object needs to be fore the led goes off.&lt;/p&gt;

&lt;p&gt;23) (Challenge) Use the if block to serial print “I see you” if the sensor outputs 1.&lt;/p&gt;

&lt;p&gt;24) Go ahead and stand up and walk around for a minute.  Observe what the other students are doing.  Ask questions and see if you can help anyone out. :)&lt;/p&gt;

&lt;p&gt;Next we are going to learn about loops.  Loops are used make stuff run on repeat.  They are often used to go through a list of things.  We are going to use a loop to make the led blink the number of times the sensor has sensed something.&lt;/p&gt;

&lt;p&gt;We are going to create a global variable. Global variables are created out of the normal program loop.  But can we used and changed inside regular code.&lt;/p&gt;

&lt;p&gt;25) Create a global variable called counter and set it’s value to 0.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step25b.png&quot; alt=&quot;step25&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step25c.png&quot; alt=&quot;step25&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step25d.png&quot; alt=&quot;step25&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step25e.png&quot; alt=&quot;step25&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step25f.png&quot; alt=&quot;step25&quot; /&gt;&lt;/p&gt;

&lt;p&gt;26) Drag out the serial print block onto the screen and throw away the quotes block attached to it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step26a.png&quot; alt=&quot;step26&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step26b.png&quot; alt=&quot;step26&quot; /&gt;&lt;/p&gt;

&lt;p&gt;27) Drag the counter variable block and connect it to the serial print block.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step27a.png&quot; alt=&quot;step27&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step27b.png&quot; alt=&quot;step27&quot; /&gt;&lt;/p&gt;

&lt;p&gt;28) Set the counter variable block to itself + 1.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step28a.png&quot; alt=&quot;step28&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step28b.png&quot; alt=&quot;step28&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step28c.png&quot; alt=&quot;step28&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step28d.png&quot; alt=&quot;step28&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step28e.png&quot; alt=&quot;step28&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step28f.png&quot; alt=&quot;step28&quot; /&gt;&lt;/p&gt;

&lt;p&gt;29) Now add a delay block to the end of the block chain.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step29.png&quot; alt=&quot;step28&quot; /&gt;&lt;/p&gt;

&lt;p&gt;30) Click upload and upload the program to the arduino.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step30.png&quot; alt=&quot;step30&quot; /&gt;&lt;/p&gt;

&lt;p&gt;31) Click on logging / debgging to make the serial monitor appear.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step31.png&quot; alt=&quot;step31&quot; /&gt;&lt;/p&gt;

&lt;p&gt;32) Notice that the serial monitor is adding one to the next number.  Go ahead and explain to an instructor happening.  Do this before you move onto the next step.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step32.png&quot; alt=&quot;step32&quot; /&gt;&lt;/p&gt;

&lt;p&gt;33) Delete every block except for the global variable counter block.&lt;/p&gt;

&lt;p&gt;34) Create a variable named sensor that will store the value of the sensor pin.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step34.png&quot; alt=&quot;step34&quot; /&gt;&lt;/p&gt;

&lt;p&gt;35) Drag the IF block and attach it to the sensor block.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step35a.png&quot; alt=&quot;step35&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step35b.png&quot; alt=&quot;step35&quot; /&gt;&lt;/p&gt;

&lt;p&gt;36) Drag the compare block onto the screen and attach it to the if block.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step36a.png&quot; alt=&quot;step36&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step36b.png&quot; alt=&quot;step36&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Remember how if the sensor is on the it will send electricity to the pin in the arduino.  The arduino represents this as a 1.  So we now need to say that if the sensor pin = 1 we want to do something.&lt;/p&gt;

&lt;p&gt;37) Drag a number block and the sensor variable into the compare block.  Set the number block equal to 1.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step37.png&quot; alt=&quot;step37&quot; /&gt;&lt;/p&gt;

&lt;p&gt;38) (Challenge) Inside the if the block add one to counter.  Try to do this without looking at the pictures below this step.&lt;/p&gt;

&lt;p&gt;39) (Challenge) Create a variable inside the IF block that equals 0.  Call it “blink times”.&lt;/p&gt;

&lt;p&gt;The repeat block is a lot like the IF block.  Except for one key difference.  It repeats the blocks inside the do until the  condition is no longer true.  The repeat block is also known as a while loop.  It will run while something is true.&lt;/p&gt;

&lt;p&gt;40) Drag the repeat block onto the screen and put it inside the if block.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step40a.png&quot; alt=&quot;step40&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step40b.png&quot; alt=&quot;step40&quot; /&gt;&lt;/p&gt;

&lt;p&gt;41) Drag the compare block that was used for the if statement and attach it to the while loop.  Change the equals sign to the less than sign (“&amp;lt;”).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step41a.png&quot; alt=&quot;step41&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step41b.png&quot; alt=&quot;step41&quot; /&gt;&lt;/p&gt;

&lt;p&gt;42) Put in the variable “blink times” for left side of the compare block and put in the counter block for the right side.  What this means is that the blocks in the  do space will run as long as “blank times” is less than counter.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step42.png&quot; alt=&quot;step42&quot; /&gt;&lt;/p&gt;

&lt;p&gt;43) Add one to the “blink times” variable block inside the do space.  This way it will not run the forever.  Loops that do not stop are called infinite loops.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-14-passive-motion-sensor/step43.png&quot; alt=&quot;step43&quot; /&gt;&lt;/p&gt;

&lt;p&gt;43) (Challenge) Inside the repeat block make the led blink for a second using the delay block and digitalWrite block.  Once you are done upload that to the arduino.&lt;/p&gt;

&lt;h4 id=&quot;congrats-you-have-done-a-lot--you-learned-about-sensors-global-variables-and-loops&quot;&gt;Congrats you have done a lot.  You learned about sensor’s, global variables, and loops.&lt;/h4&gt;

&lt;h2 id=&quot;challenge-projects&quot;&gt;Challenge Projects&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Add another led that turns on and does not blink while the one that is already setup does.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Serial Print the number of times the sensor has sensed something.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Have fun you earned it!!!&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;resources&quot;&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.arduino.cc&quot;&gt;https://www.arduino.cc&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://learn.adafruit.com/pir-passive-infrared-proximity-motion-sensor/how-pirs-work&quot;&gt;Passive Motion Sensor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Arduino Passive Motion Sensor (PIR).</summary></entry><entry><title type="html">Arduino 101 Input &amp;amp; Output With Blocks</title><link href="http://localhost:4000/arduino_block/input-output/" rel="alternate" type="text/html" title="Arduino 101 Input &amp; Output With Blocks" /><published>2017-10-12T00:00:00-05:00</published><updated>2017-10-12T00:00:00-05:00</updated><id>http://localhost:4000/arduino_block/input-output</id><content type="html" xml:base="http://localhost:4000/arduino_block/input-output/">&lt;h2 id=&quot;project-kit-for-the-workbook&quot;&gt;Project Kit For the Workbook&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/kit.jpg&quot; alt=&quot;kit&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;bill-of-materials&quot;&gt;Bill of Materials&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;1 x Arduino Uno&lt;/li&gt;
  &lt;li&gt;1 x led&lt;/li&gt;
  &lt;li&gt;1 x 220 Ohm Resistor&lt;/li&gt;
  &lt;li&gt;3 x jumper wires&lt;/li&gt;
  &lt;li&gt;2 x regular wires&lt;/li&gt;
  &lt;li&gt;1 x push button&lt;/li&gt;
  &lt;li&gt;1 x breadboard&lt;/li&gt;
  &lt;li&gt;1 x usb type b cable&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;steps&quot;&gt;Steps&lt;/h2&gt;

&lt;p&gt;1) Install the &lt;a href=&quot;https://www.arduino.cc/en/Main/Software&quot;&gt;Arduino IDE&lt;/a&gt; for your Operating System.&lt;/p&gt;

&lt;p&gt;2) Install &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;node js&lt;/a&gt; for your Operating System.&lt;/p&gt;

&lt;p&gt;3) Open a command prompt / terminal and type in node –version.  Make sure you see something like this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step3.png&quot; alt=&quot;step3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;4) &lt;a href=&quot;https://github.com/phptuts/blocklyarduinoclass/archive/master.zip&quot;&gt;Download&lt;/a&gt; the block environment and move it your desktop.  Rename the folder to ArduinoBlocks.&lt;/p&gt;

&lt;p&gt;5) In the command prompt type:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd ~/Desktop/ArduinoBlocks/ 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step5.png&quot; alt=&quot;step4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;6) In the command prompt type:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sh start.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step6.png&quot; alt=&quot;step6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;7) Now open your &lt;a href=&quot;http://127.0.0.1:3000/&quot;&gt;Block Environment&lt;/a&gt;, http://127.0.0.1:3000/.  Click on discard if you see blocks on the screen.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step7.png&quot; alt=&quot;step7&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So you are going to learn how to control the arduino.  You will do this by dragging blocks onto the screen.  Each block represents something that the arduino will do.  The first thing we are going to learn how to do is send electricity to the pin.&lt;/p&gt;

&lt;p&gt;8) Click on Input/Output and drag the DigitalWrite block.  Change the pin to 13 and make sure Stat is HIGH.  High means that the electricity will be sent through that pin.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step8a.png&quot; alt=&quot;step8a&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step8b.png&quot; alt=&quot;step8b&quot; /&gt;&lt;/p&gt;

&lt;p&gt;9) Plug the arduino into the computer.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step9a.jpg&quot; alt=&quot;step9a&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step9b.jpg&quot; alt=&quot;step9b&quot; /&gt;&lt;/p&gt;

&lt;p&gt;10) Click the upload button.  This will upload program to the arduino.  Once you are done you should see a yellow light.  That yellow light is the arduino’s built in led.  When you send electricity through pin 13 that led will light up.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step10a.png&quot; alt=&quot;step10a&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step10b.png&quot; alt=&quot;step10b&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step10c.png&quot; alt=&quot;step10c&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step10d.jpg&quot; alt=&quot;step10d&quot; /&gt;&lt;/p&gt;

&lt;p&gt;11) Take the led and plug the long end of the led and put into (3, e) of the breadboard and the short end into (5, e).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step11.jpg&quot; alt=&quot;step11&quot; /&gt;&lt;/p&gt;

&lt;p&gt;12) Take a male to male jumper wire and plug it into (5, d) and the blue line of the breadboard.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step12.jpg&quot; alt=&quot;step12&quot; /&gt;&lt;/p&gt;

&lt;p&gt;13) Take the resistor and plug it into the blue line, leave one space at the end.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step13.jpg&quot; alt=&quot;step13&quot; /&gt;&lt;/p&gt;

&lt;p&gt;14) Take a male to male jumper wire and plug it into (gnd) ground of the arduino and the end space of the blue line on the breadboard.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step14.jpg&quot; alt=&quot;step14&quot; /&gt;&lt;/p&gt;

&lt;p&gt;15) Take a male to male jumper wire and plug it into pin 7 of the arduino and (3, d) of the breadboard.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step15.jpg&quot; alt=&quot;step15&quot; /&gt;&lt;/p&gt;

&lt;p&gt;16) (Challenge) Can you change the program to make led light up by sending electricity to pin 7.  To see your change click the upload button on the block web page.  If you have trouble ask for help. :)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step16.jpg&quot; alt=&quot;step16&quot; /&gt;&lt;/p&gt;

&lt;p&gt;17) (Challenge) Move the wire to that is plugged into pin 7 to pin 8.  Then change the blocks to make the led light up.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step17.jpg&quot; alt=&quot;step17&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now it’s time to make to Led blink.  To do that we are going to learn a new block called delay.  Delay pauses the program for period of time.  The number you put in delay determines how many milliseconds the program will pause.  A millisecond is 1/1000 of a second.&lt;/p&gt;

&lt;p&gt;18) Open the control block and drag delay on screen.  Then connect that block to the DigitalWrite Block.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step18a.png&quot; alt=&quot;step18&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step18b.png&quot; alt=&quot;step18&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So the DigitalWrite Block takes 2 inputs, the pin number and (HIGH / LOW).  If it is set to HIGH it will send electricity to the pin.  If it is set to LOW it will not send electricity to the pin.&lt;/p&gt;

&lt;p&gt;19) Drag the DigitalWrite Block on the screen and connect it to the delay block.  Set it to  LOW.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step19a.png&quot; alt=&quot;step19&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step19b.png&quot; alt=&quot;step19&quot; /&gt;&lt;/p&gt;

&lt;p&gt;20) Now Drag another delay block onto screen and connect it to the block chain.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step20a.png&quot; alt=&quot;step20&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step20b.png&quot; alt=&quot;step20&quot; /&gt;&lt;/p&gt;

&lt;p&gt;21) Now click the upload button.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step21.png&quot; alt=&quot;step21&quot; /&gt;&lt;/p&gt;

&lt;p&gt;22) (Challenge) Notice that led does not blink. Can you fix the blocks to make the led blink.  What you are doing is called debugging.  Debugging is fixing something that is wrong with a program.  A bug is what is wrong with the code.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step22a.jpg&quot; alt=&quot;step22&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step22b.jpg&quot; alt=&quot;step22&quot; /&gt;&lt;/p&gt;

&lt;p&gt;23) (Challenge) Can you make the led stay on for 2 seconds (2000 milliseconds).&lt;/p&gt;

&lt;p&gt;Congrats!! You have just written your first complete arduino program.  Go ahead and stand up and walk around for a minute.&lt;/p&gt;

&lt;p&gt;24) Now we are going to delete all the code you have written.  If you want to save it click on Save XML and store it some where you can find it later.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step24a.png&quot; alt=&quot;step24&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step24b.png&quot; alt=&quot;step24&quot; /&gt;&lt;/p&gt;

&lt;p&gt;25) Now plug in the button.  Plug ond wire into ground (gnd) and the other end into pin 2 of the arduino.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step25a.jpg&quot; alt=&quot;step25&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step25b.jpg&quot; alt=&quot;step25&quot; /&gt;&lt;/p&gt;

&lt;p&gt;26) Now drag DigitalRead with PULLUP RESISTOR block to screen.  Set the block to pin number 2.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step26a.png&quot; alt=&quot;step26&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step26b.png&quot; alt=&quot;step26&quot; /&gt;&lt;/p&gt;

&lt;p&gt;27) Drag the Serial Print Block onto the screen.  This block is used to send messages to your computer from the arduino.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step27.png&quot; alt=&quot;step27&quot; /&gt;&lt;/p&gt;

&lt;p&gt;28) Connect the Serial Print Block to the Digital Read Block and throw away the green block with quotes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step28.png&quot; alt=&quot;step28&quot; /&gt;&lt;/p&gt;

&lt;p&gt;29) Connect the delay block to the bottom of the serial block.  Set the number in the delay block to 100.  This means that arduino will pause for a 10th of a second.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step29.png&quot; alt=&quot;step29&quot; /&gt;&lt;/p&gt;

&lt;p&gt;30) Upload the program to the arduino.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step30.png&quot; alt=&quot;step29&quot; /&gt;&lt;/p&gt;

&lt;p&gt;31) Click on logging / debgging to make the serial monitor appear.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step31.png&quot; alt=&quot;step31&quot; /&gt;&lt;/p&gt;

&lt;p&gt;32) Push the button and notice that when u push the button the output is 0 and that when u let go of the button it is 1.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step32.png&quot; alt=&quot;step32&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The Serial Block is a great way to help debug your code. :)&lt;/p&gt;

&lt;p&gt;33) Now we are going to learn about variables. A variable is how we store data in the arduino.  Go ahead and delete all the blocks and pull out variable block.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step33a.png&quot; alt=&quot;step33&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step33b.png&quot; alt=&quot;step33&quot; /&gt;&lt;/p&gt;

&lt;p&gt;34) Now rename the variable to btn, for button. We will use this variable to store 0 or 1 for the button push.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step34a.png&quot; alt=&quot;step34&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step34b.png&quot; alt=&quot;step34&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step34c.png&quot; alt=&quot;step34&quot; /&gt;&lt;/p&gt;

&lt;p&gt;35) Now drag the  DigitalRead Input PULLLUP Resistor Block and connect it to the btn variable block.  Set the pin number to 2.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step35a.png&quot; alt=&quot;step35&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step35b.png&quot; alt=&quot;step35&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now we are going to learn about if blocks.  If blocks are used to make decisions in your program.  If what is connected to the if block is true it will do all the blocks in the do space.  Let’s build something to make this concept more clear.&lt;/p&gt;

&lt;p&gt;36) Drag the If block and connect it to the bottom of the variable block.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step36a.png&quot; alt=&quot;step36&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step36b.png&quot; alt=&quot;step36&quot; /&gt;&lt;/p&gt;

&lt;p&gt;37) Now drag the compare block onto the screen and connect it to the if block.  So if what is on the right and left side equal each other the arduino will run the blocks in the do space.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step37a.png&quot; alt=&quot;step37&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step37b.png&quot; alt=&quot;step37&quot; /&gt;&lt;/p&gt;

&lt;p&gt;38) Go into the variable blocks and drag the btn block into the first part compare block.  The btn block is variable that we created earlier.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step38a.png&quot; alt=&quot;step38&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step38b.png&quot; alt=&quot;step38&quot; /&gt;&lt;/p&gt;

&lt;p&gt;39) Now go to the math section and drag the number block the second part of the compare block.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step39a.png&quot; alt=&quot;step39&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step39b.png&quot; alt=&quot;step39&quot; /&gt;&lt;/p&gt;

&lt;p&gt;40) Drag Digital Write Block into the do space.  Set the pin to 8.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step40a.png&quot; alt=&quot;step40&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step40b.png&quot; alt=&quot;step40&quot; /&gt;&lt;/p&gt;

&lt;p&gt;41) Upload program to the arduino and push the button.  Notice that when u stopped pressing the button the light continues to stay on.  Can you tell me why?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step41a.png&quot; alt=&quot;step41&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step41b.jpg&quot; alt=&quot;step41&quot; /&gt;&lt;/p&gt;

&lt;p&gt;42) (Challenge) Can you create another IF block that will turn the led off when you stop pressing the button?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step42a.jpg&quot; alt=&quot;step42&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino-block/2017-10-12-input-output/step42b.jpg&quot; alt=&quot;step42&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;challenge-projects&quot;&gt;Challenge Projects&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Make it so that when you push the button the led blinks 2 times.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Ask for a second led and wire set.  Hook the other led to the side of the led in the breadboard.  Make it so that when you push the button it makes the right led on and the left led off.  And when you don’t push the button make it so that the opposite happens. You will want to hook the short side of the led to the blue end of the breadboard and the long side of the led to pin 4 of the arduino.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Just have fun and do what you want :)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;resources&quot;&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.arduino.cc&quot;&gt;https://www.arduino.cc&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.instructables.com/id/Arduino-Projects/&quot;&gt;http://www.instructables.com/id/Arduino-Projects/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developers.google.com/blockly/&quot;&gt;Blockly, the language&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/BlocklyDuino/BlocklyDuino&quot;&gt;The github project this was based on.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Arduino Basic with blocks.</summary></entry><entry><title type="html">Wifi Controlled Christmas Lights Using Node and ESP8266 Chip</title><link href="http://localhost:4000/esp8266/esp8266-wifi-controlled-christmas-lights/" rel="alternate" type="text/html" title="Wifi Controlled Christmas Lights Using Node and ESP8266 Chip" /><published>2017-09-13T00:00:00-05:00</published><updated>2017-09-13T00:00:00-05:00</updated><id>http://localhost:4000/esp8266/esp8266-wifi-controlled-christmas-lights</id><content type="html" xml:base="http://localhost:4000/esp8266/esp8266-wifi-controlled-christmas-lights/">&lt;h2 id=&quot;project-kit&quot;&gt;Project Kit&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-09-13-esp8266-wifi-controlled-christmas-lights/kit1.jpg&quot; alt=&quot;kit1&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;bill-of-materials&quot;&gt;Bill of Materials&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;1 x ESP8266&lt;/li&gt;
  &lt;li&gt;1 x led addressable light strip 5v&lt;/li&gt;
  &lt;li&gt;2 x jumper wires (male to male)&lt;/li&gt;
  &lt;li&gt;3 x jumper wires (male to female)&lt;/li&gt;
  &lt;li&gt;1 x 5 volt / 3 amp dc power cord&lt;/li&gt;
  &lt;li&gt;1 x Female DC Power Jack Adapter Plug&lt;/li&gt;
  &lt;li&gt;1 x breadboard&lt;/li&gt;
  &lt;li&gt;1 x micro usb cord&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;project-setup&quot;&gt;Project Setup&lt;/h2&gt;

&lt;h3 id=&quot;step-1-put-the-esp8266-chip-in-the-breadboard&quot;&gt;Step 1) Put the ESP8266 Chip in the breadboard.&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-09-13-esp8266-wifi-controlled-christmas-lights/step1a.jpg&quot; alt=&quot;step1a&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-09-13-esp8266-wifi-controlled-christmas-lights/step1b.jpg&quot; alt=&quot;step1b&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-2-insert-the-dc-power-jack-adapter-into-the-power-cord&quot;&gt;Step 2) Insert the DC Power Jack Adapter into the power cord.&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-09-13-esp8266-wifi-controlled-christmas-lights/step2.jpg&quot; alt=&quot;step2&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-3-take-male-to-male-jumper-wire-and-put-one-side-into-the-positive-end-of-the-power-adapter-and-the-other-end-the-red-wire-of-led-light-strip--screw-the-wire-down-on-the-power-adapter-side&quot;&gt;Step 3) Take male to male jumper wire and put one side into the positive end of the power adapter and the other end the red wire of led light strip.  Screw the wire down on the power adapter side.&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-09-13-esp8266-wifi-controlled-christmas-lights/step3a.jpg&quot; alt=&quot;step3a&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-09-13-esp8266-wifi-controlled-christmas-lights/step3b.jpg&quot; alt=&quot;step3b&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-09-13-esp8266-wifi-controlled-christmas-lights/step3c.jpg&quot; alt=&quot;step3c&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-09-13-esp8266-wifi-controlled-christmas-lights/step3d.jpg&quot; alt=&quot;step3c&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-4-hook-in-the-male-to-male-wire-to-ground-of-the-power-adapter&quot;&gt;Step 4) Hook in the male to male wire to ground of the power adapter.&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-09-13-esp8266-wifi-controlled-christmas-lights/step4a.jpg&quot; alt=&quot;step4a&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-09-13-esp8266-wifi-controlled-christmas-lights/step4b.jpg&quot; alt=&quot;step4b&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-5-hook-the-other-end-of-the-male-to-male-wire-into-the-breadboard-28-d&quot;&gt;Step 5) Hook the other end of the male to male wire into the breadboard (28, d).&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-09-13-esp8266-wifi-controlled-christmas-lights/step5.jpg&quot; alt=&quot;step5&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-6-take-the-other-male-to-male-jumper-wire-put-into-the-breadboard-28-c-and-ground-gnd-on-the-esp-8266-chip--for-me-the-that-is-22-i--but-you-should-be-able-to-gnd-port-on-the-board&quot;&gt;Step 6) Take the other male to male jumper wire put into the breadboard (28, c) and ground (gnd) on the ESP 8266 Chip.  For me the that is (22, i).  But you should be able to (gnd) port on the board.&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-09-13-esp8266-wifi-controlled-christmas-lights/step6.jpg&quot; alt=&quot;step6&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-7-take-the-male-to-female-jumper-wire-and-hook-it-into-the-middle-wire-of-the-led-light-strip&quot;&gt;Step 7) Take the male to female jumper wire and hook it into the middle wire of the led light strip.&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-09-13-esp8266-wifi-controlled-christmas-lights/step7.jpg&quot; alt=&quot;step7&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-8-take-the-other-end-of-the-male-to-female-wire-and-put-that-into-d6-of-the-esp8266&quot;&gt;Step 8) Take the other end of the male to female wire and put that into D6 of the ESP8266.&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-09-13-esp8266-wifi-controlled-christmas-lights/step8.jpg&quot; alt=&quot;step8&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-9-take-the-other-end-of-the-male-to-female-wire-and-put-it-into-ground-white-wire-of-the-led-light-strip&quot;&gt;Step 9) Take the other end of the male to female wire and put it into ground (white) wire of the led light strip.&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-09-13-esp8266-wifi-controlled-christmas-lights/step9.jpg&quot; alt=&quot;step9&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-10-take-the-other-end-of-that-wire-and-place-it-in-28-b-of-the-breadboard--notice-that-the-esp8266-and-led-stripe-share-the-same-ground&quot;&gt;Step 10) Take the other end of that wire and place it in (28, b) of the breadboard.  (Notice that the esp8266 and led stripe share the same ground).&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-09-13-esp8266-wifi-controlled-christmas-lights/step10.jpg&quot; alt=&quot;step10&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;code-setup&quot;&gt;Code Setup&lt;/h2&gt;

&lt;h3 id=&quot;step-1-open-the-arduino-ide-and-go-to-setting--preferences&quot;&gt;Step 1) Open the arduino IDE and go to setting / preferences.&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-09-13-esp8266-wifi-controlled-christmas-lights/step1-code.png&quot; alt=&quot;step1-code&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-2-add-this-httparduinoesp8266comstablepackage_esp8266com_indexjson-to-the-board-manager-in-the-setting&quot;&gt;Step 2) Add this http://arduino.esp8266.com/stable/package_esp8266com_index.json to the board manager in the setting.&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-09-13-esp8266-wifi-controlled-christmas-lights/step2-code.png&quot; alt=&quot;step2-code&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-3-go-to-tools---boards---board-manager-and-search-for-esp8266--then-install-the-latest-esp8266-board&quot;&gt;Step 3) Go to Tools -&amp;gt; Boards -&amp;gt; Board Manager and search for esp8266.  Then install the latest esp8266 board.&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-09-13-esp8266-wifi-controlled-christmas-lights/step3-code.png&quot; alt=&quot;step3-code&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-4-install-the-latest-version-esp8266-library&quot;&gt;Step 4) Install the latest version esp8266 library.&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-09-13-esp8266-wifi-controlled-christmas-lights/step4-code.png&quot; alt=&quot;step4-code&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-5-install-the-ada-fruit-neo-pixel-library--download-the-zip-file-then-go-to-tools---include-library---add-zip-and-that-zip-file&quot;&gt;Step 5) Install the &lt;a href=&quot;https://github.com/adafruit/Adafruit_NeoPixel&quot;&gt;ada fruit neo pixel library&lt;/a&gt;.  Download the zip file. Then go to tools -&amp;gt; include library -&amp;gt; add zip and that zip file.&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-09-13-esp8266-wifi-controlled-christmas-lights/step5-code.png&quot; alt=&quot;step5-code&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-6-create-a-new-sketch-in-your-arduino-ide&quot;&gt;Step 6) Create a new sketch in your arduino ide.&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-09-13-esp8266-wifi-controlled-christmas-lights/step6-code.png&quot; alt=&quot;step5-code&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-7-paste-this-code-into-your-arduino-ide--if-you-have-kit-3-adjust-numpixels-to-60&quot;&gt;Step 7) Paste this code into your arduino ide.  If you have kit 3 adjust NUMPIXELS to 60.&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include &amp;lt;Adafruit_NeoPixel.h&amp;gt;
#include &amp;lt;ESP8266WiFi.h&amp;gt;
#include &amp;lt;WiFiClient.h&amp;gt;
#include &amp;lt;ArduinoJson.h&amp;gt;

#ifdef __AVR__
  #include &amp;lt;avr/power.h&amp;gt;
#endif

/**
 * The number lights in your led strip
 */
#define NUMPIXELS      30

/**
 * The default time before request another pattern.  It's in milliseconds so it would be 10 seconds
 */
int intervalToCheckTime = 10000;

/** 
 *  The time in the future to check the web for a new pattern.  We set it to zero, it will be set correctly in the web request
 */
int checkTimeInNumberOfSeconds = 0;

// When we setup the NeoPixel library, we tell it how many pixels, and which pin to use to send signals.
// Note that for older NeoPixel strips you might need to change the third parameter--see the strandtest
// example for more information on possible values.
Adafruit_NeoPixel pixels = Adafruit_NeoPixel(NUMPIXELS, D6, NEO_GRB + NEO_KHZ800);

WiFiClient client;

/** 
 *  WIFI STUFF
 */
const char* ssid = &quot;****&quot;;//type your ssid
const char* password = &quot;****&quot;;//type your password
const char* host = &quot;****&quot;; // type in your cloud 9 url.
const uint16_t port = 80;

/**
 * The number represents the max frame / lights a pattern can affect
 */
const int MAX_FRAMES = 250;

/**
 * This represents a frame.
 */
struct RGB_LIGHT {
  int red;
  int green;
  int blue;
  int lightPosition;
  int delayTime;
  /**
   * If skip is true we break 
   */
  boolean skip;
};

/**
 * The pattern / frames used to turn on and off the lights
 */
RGB_LIGHT lights[MAX_FRAMES];

void setup() {
  // This is for Trinket 5V 16MHz, you can remove these three lines if you are not using a Trinket
#if defined (__AVR_ATtiny85__)
  if (F_CPU == 16000000) clock_prescale_set(clock_div_1);
#endif
  // End of trinket special code

  pixels.begin(); // This initializes the NeoPixel library.
  Serial.begin(115200);
  delay(10);

  // We start by connecting to a WiFi network

  Serial.println();
  Serial.println();
  Serial.print(&quot;Connecting to &quot;);
  Serial.println(ssid);
  
  /* Explicitly set the ESP8266 to be a WiFi-client, otherwise, it by default,
     would try to act as both a client and an access-point and could cause
     network-issues with your other WiFi-devices on your WiFi-network. */
  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(&quot;.&quot;);
  }

  Serial.println(&quot;&quot;);
  Serial.println(&quot;WiFi connected&quot;);  
  Serial.println(&quot;IP address: &quot;);
  Serial.println(WiFi.localIP());
  
  clearLights();
  webRequest();
  checkTimeInNumberOfSeconds = millis() + intervalToCheckTime;

}

void loop() {
  
  if (checkTimeInNumberOfSeconds &amp;gt; millis()) {
     for(int frameNumbers=0; frameNumbers &amp;lt; MAX_FRAMES; frameNumbers++){
        if (lights[frameNumbers].skip == false) {
            pixels.setPixelColor(lights[frameNumbers].lightPosition, pixels.Color(lights[frameNumbers].red,lights[frameNumbers].green,lights[frameNumbers].blue)); 
            pixels.show(); 
            delay(lights[frameNumbers].delayTime);
        }
        else {
           break;
        }
    }
  }
  else {
       webRequest();
       Serial.println(&quot;NEW PATTERN&quot;);
       // Sets the time to check the web for a new pattern
       checkTimeInNumberOfSeconds = millis() + intervalToCheckTime;
  }
}

/**
 * Clears all the lights 
 */
void clearLights() {
      for (int i = 0; i &amp;lt; NUMPIXELS; i += 1) {
         pixels.setPixelColor(i, pixels.Color(0,0,0)); 
         pixels.show();
      }
}

/** 
 *  Clears the array of RGB_LIGHTS
 */
void clearArrayOfLights() {
  for(int i=0; i &amp;lt; MAX_FRAMES; i++){
      lights[i] = {0,0,0, 0, 0, true};
  }
}

/**
 * Makes the web request to get the light pattern
 */
void webRequest() {
    String jsonString = &quot;&quot;;
    if (client.connect(host, port)) {
          String url =  &quot;/leds&quot;;
          client.println(&quot;GET &quot; + url + &quot; HTTP/1.1&quot;);
          client.println(&quot;Host: &quot;+ (String)host);
          client.println(&quot;User-Agent: Arduino/1.0&quot;);
          client.println(&quot;Connection: close&quot;);
          client.println();
          client.println();
          while (client.connected()) {
         
            client.readStringUntil('|');
            jsonString = client.readStringUntil('\n');
      
          }
          parseJSONFromServer(jsonString);
    }
    else {
      Serial.println(&quot;NOT CONNECTED&quot;);
    }
}


/** 
 *  Parses the json string
 */
void parseJSONFromServer(String jsonString)
{
     DynamicJsonBuffer  jsonBuffer;
    // Root of the object tree.
    //
    // It's a reference to the JsonObject, the actual bytes are inside the
    // JsonBuffer with all the other nodes of the object tree.
    // Memory is freed when jsonBuffer goes out of scope.
    JsonObject&amp;amp; root = jsonBuffer.parseObject(jsonString);

 
  
    // Test if parsing succeeds.
    if (!root.success()) {
      Serial.println(&quot;parseObject() failed JSON STRING&quot;);
      Serial.println(jsonString);
      return;
    }

  JsonArray&amp;amp; reds = root[&quot;reds&quot;].asArray();
  JsonArray&amp;amp; greens = root[&quot;greens&quot;].asArray();
  JsonArray&amp;amp; blues = root[&quot;blues&quot;].asArray();
  JsonArray&amp;amp; lightPositions = root[&quot;lightPositions&quot;].asArray();
  JsonArray&amp;amp; delayTimes = root[&quot;delayTimes&quot;].asArray();
  intervalToCheckTime = root[&quot;requestTime&quot;];
  clearArrayOfLights();
  for (int i = 0; i &amp;lt; reds.size(); i += 1) {
       lights[i] = { 
                reds.get&amp;lt;int&amp;gt;(i),
                greens.get&amp;lt;int&amp;gt;(i),
                blues.get&amp;lt;int&amp;gt;(i), 
                lightPositions.get&amp;lt;int&amp;gt;(i), 
                delayTimes.get&amp;lt;int&amp;gt;(i),
                false
       };
  }
}


/** 
 *  A debuggin function for seeing the light pattern
 */
void printLights() {
  Serial.println(&quot;LIGHT PATTERN&quot;);
  for (int frameNumbers = 0; frameNumbers &amp;lt; MAX_FRAMES; frameNumbers += 1) {
         if (lights[frameNumbers].skip) {
             break;
         }
         Serial.print(&quot;FRAME  &quot; + String(frameNumbers, 10));
         Serial.print(&quot; RED &quot; + String(lights[frameNumbers].red, 10));
         Serial.print(&quot; GREEN &quot; + String(lights[frameNumbers].green, 10));
         Serial.print(&quot; BLUE &quot; + String(lights[frameNumbers].blue, 10));
         Serial.print(&quot; LIGHT POSITION &quot; + String(lights[frameNumbers].lightPosition, 10));
         Serial.print(&quot; DELAY TIME &quot; + String(lights[frameNumbers].delayTime, 10));
         Serial.println();
  }
}  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;step-8-signup-for-a-free-cloud9-account--i-would-recommend-you-use-your-github-account-for-authentication&quot;&gt;Step 8) SignUp For a free &lt;a href=&quot;https://c9.io/&quot;&gt;cloud9&lt;/a&gt; account.  I would recommend you use your github account for authentication.&lt;/h3&gt;

&lt;h3 id=&quot;step-9-create-a-new-workspace-in-your-cloud-9-dashboard--at-the-time-of-this-writing-its-in-the-top-right-corner-of-the-page&quot;&gt;Step 9) Create a new workspace in your cloud 9 dashboard.  At the time of this writing it’s in the top right corner of the page.&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-09-13-esp8266-wifi-controlled-christmas-lights/step9-code.png&quot; alt=&quot;step9-code&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-10-next-fill-in-the-name-of-the-work-space-and-put-in-this-in-the-git-clone-project-url--httpsgithubcomphptutsarduinochristmaslightsgit--then-select-the-node-template--then-click-create-workspace&quot;&gt;Step 10) Next fill in the name of the work space and put in this in the git clone project url.  (https://github.com/phptuts/arduinochristmaslights.git)  Then select the node template.  Then click create workspace.&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-09-13-esp8266-wifi-controlled-christmas-lights/step10-code.png&quot; alt=&quot;step10-code&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-11-then-click-on-appjs-and-click-run-on-cloud-9-interface--this-will-run-start-the-server&quot;&gt;Step 11) Then click on app.js and click run on cloud 9 interface.  This will run start the server.&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-09-13-esp8266-wifi-controlled-christmas-lights/step11-code.png&quot; alt=&quot;step11-code&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-12-then-copy-the-url-in-the-console--in-my-case-its-httpsarduino-christmas-lighting-nglaserc9usersio&quot;&gt;Step 12) Then copy the url in the console.  In my case its “https://arduino-christmas-lighting-nglaser.c9users.io”.&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-09-13-esp8266-wifi-controlled-christmas-lights/step12-code.png&quot; alt=&quot;step12-code&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-13-change-the-host-variable-to-use-the-host-you-url-copied-from-the-cloud-9-terminal--also-change-the-wifi-password-and-ssid-variables-the-ssid-is-the-name-of-your-wifi-network&quot;&gt;Step 13) Change the host variable to use the host you url copied from the cloud 9 terminal.  Also change the wifi password and ssid variables. The ssid is the name of your wifi network.&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-09-13-esp8266-wifi-controlled-christmas-lights/step13-code.png&quot; alt=&quot;step13-code&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-14-hook-the-micro-usb-cord-into-the-esp8266-chip--then-select-the-port-that-it-is-on&quot;&gt;Step 14) Hook the micro usb cord into the esp8266 chip.  Then select the port that it is on.&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-09-13-esp8266-wifi-controlled-christmas-lights/step14-code.png&quot; alt=&quot;step14-code&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-15-select-the-esp8266-board--in-our-case-its-esp-12-e-model&quot;&gt;Step 15) Select the esp8266 board.  In our case it’s ESP-12 E model.&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-09-13-esp8266-wifi-controlled-christmas-lights/step15-code.png&quot; alt=&quot;step15-code&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-16-upload-the-sketch-to-the-esp8266-chip&quot;&gt;Step 16) Upload the sketch to the esp8266 chip.&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-09-13-esp8266-wifi-controlled-christmas-lights/step16-code.png&quot; alt=&quot;step16-code&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-17-go-to-website-you-copied-into-the-arduino-ide-and-play-around-with-the-user-interface--you-can-do-default-patterns-or-use-the-pipe-system-to-create-your-own--if-u-are-using-kit-one-select-30-leds-for-the-default-pattern--if-you-are-using-kit-3-use-60-leds&quot;&gt;Step 17) Go to website you copied into the arduino ide and play around with the user interface.  You can do default patterns or use the pipe system to create your own.  If u are using kit one select 30 leds for the default pattern.  If you are using kit 3 use 60 leds.&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-09-13-esp8266-wifi-controlled-christmas-lights/step17-code.png&quot; alt=&quot;step16-code&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-18-hook-the-tree-and-have-fun--you-can-see-the-demo-here&quot;&gt;Step 18) Hook the tree and have fun. :) You can see the demo here.&lt;/h3&gt;

&lt;iframe src=&quot;https://www.facebook.com/plugins/video.php?href=https%3A%2F%2Fwww.facebook.com%2Fnoah.glaser.75%2Fvideos%2F1437675766280514%2F&amp;amp;show_text=1&amp;amp;width=560&quot; width=&quot;560&quot; height=&quot;464&quot; style=&quot;border:none;overflow:hidden&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;resources&quot;&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/adafruit/Adafruit_NeoPixel&quot;&gt;https://github.com/adafruit/Adafruit_NeoPixel&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/esp8266/Arduino&quot;&gt;https://github.com/esp8266/Arduino&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/bblanchon/ArduinoJson&quot;&gt;Arduino JSON Library&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.arduino.cc/en/Tutorial/HttpClient&quot;&gt;Arduino Http Library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Wifi Controlled Christmas Lights Using Node Js and ESP8266 Chip</summary></entry><entry><title type="html">Build An Arduino Motion Sensor With Led Work book</title><link href="http://localhost:4000/arduino/arduino-passive-motion-sensor/" rel="alternate" type="text/html" title="Build An Arduino Motion Sensor With Led Work book" /><published>2017-09-11T00:00:00-05:00</published><updated>2017-09-11T00:00:00-05:00</updated><id>http://localhost:4000/arduino/arduino-passive-motion-sensor</id><content type="html" xml:base="http://localhost:4000/arduino/arduino-passive-motion-sensor/">&lt;h2 id=&quot;project-kit&quot;&gt;Project Kit&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-11-arduino-passive-motion-sensor/kit.jpg&quot; alt=&quot;step1&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;bill-of-materials&quot;&gt;Bill of Materials&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;1 x Arduino Uno&lt;/li&gt;
  &lt;li&gt;1 x led&lt;/li&gt;
  &lt;li&gt;1 x 220 Ohm Resistor&lt;/li&gt;
  &lt;li&gt;2 x jumper wires (male to male)&lt;/li&gt;
  &lt;li&gt;3 x jumper wires (male to female)&lt;/li&gt;
  &lt;li&gt;1 x passive motion sensor (pir)&lt;/li&gt;
  &lt;li&gt;1 x breadboard&lt;/li&gt;
  &lt;li&gt;1 x usb type b cable&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;steps&quot;&gt;Steps&lt;/h2&gt;

&lt;p&gt;Before you begin be sure you have the &lt;a href=&quot;https://www.arduino.cc/en/Main/Software&quot;&gt;arduino ide&lt;/a&gt; installed.  You might want to review the &lt;a href=&quot;https://docs.google.com/presentation/d/1NVXJuoGbR-pNWjyHMJpdIDgtxiLFyZJTAl8aILhjp4g/edit?usp=sharing&quot;&gt;class presentation&lt;/a&gt;
if you found this on the internet.&lt;/p&gt;

&lt;p&gt;Step 1) Take the led and put the long side (positive) into (5, e) and short side (negative) into (3, e) of the breadboard.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-11-arduino-passive-motion-sensor/step1.jpg&quot; alt=&quot;step1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Step 2) Take the resistor and plug one end into (5, d) and the other end into (8, b).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-11-arduino-passive-motion-sensor/step2.jpg&quot; alt=&quot;step2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Step 3) Plug one end of the male to male jumper wire into (2, a).  Take the other wire and plug it into (8, a).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-11-arduino-passive-motion-sensor/step3.jpg&quot; alt=&quot;step3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Step 4) Take the jumper wire plugged into (8, a) into arduino pin 7.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-11-arduino-passive-motion-sensor/step4.jpg&quot; alt=&quot;step4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Step 5) Take the other jumper wire and plug it into ground (gnd) in the arduino.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-11-arduino-passive-motion-sensor/step5.jpg&quot; alt=&quot;step5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Step 6) Take a female to male wire and plug one end into pin s of the sensor and the other end into pin 4 of the arduino&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-11-arduino-passive-motion-sensor/step6.jpg&quot; alt=&quot;step6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Step 7) Take a female to male wire and plug one end into pin ground (gnd) of the sensor and the other end into pin 
ground of the arduino&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-11-arduino-passive-motion-sensor/step7.jpg&quot; alt=&quot;step7&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Step 8) Take a female to male wire and plug one end into pin + of the sensor and the other end into pin 
        3.3 volts of the arduino&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-11-arduino-passive-motion-sensor/step8.jpg&quot; alt=&quot;step8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It should like this when you are done.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-11-arduino-passive-motion-sensor/looklike.jpg&quot; alt=&quot;lookslike&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Step 9) Plug in the arduino into the computer&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-11-arduino-passive-motion-sensor/looklike.jpg&quot; alt=&quot;lookslike&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Step 10) Open the arduino ide and paste the code in below.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
int led = 7;
int pirSensor = 4;

void setup() {
  // put your setup code here, to run once:
  pinMode(pirSensor, INPUT_PULLUP);
  pinMode(led, OUTPUT);
  Serial.begin(9200);
}

void loop() {
  // put your main code here, to run repeatedly:
  if (digitalRead(pirSensor)) {
        Serial.println(&quot;Sensed Something&quot;);
        digitalWrite(led, HIGH);
  }
  else {
      digitalWrite(led, LOW);
      Serial.println(&quot;Sensed Nothing&quot;);
  }

  delay(500);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Step 11) Select the port in the arduino ide that your board is hooked up to&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-11-arduino-passive-motion-sensor/step11.png&quot; alt=&quot;step11&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Step 12) Open the serial monitor&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-11-arduino-passive-motion-sensor/step13.png&quot; alt=&quot;step13&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Step 13) Upload the arduino sketch&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-11-arduino-passive-motion-sensor/step12.png&quot; alt=&quot;step12&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;challenge-projects&quot;&gt;Challenge Projects&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Count the number of times that sensor has found something and display that in the serial monitor.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Use Serial.readStringUntil to build something that you can use to send commands to the arduino and control the 
delay in the program.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Do your own thing and build something on top it, aka just have fun. :)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;resources&quot;&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://playground.arduino.cc/Code/PIRsense&quot;&gt;https://playground.arduino.cc/Code/PIRsense&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://learn.adafruit.com/pir-passive-infrared-proximity-motion-sensor/using-a-pir&quot;&gt;https://learn.adafruit.com/pir-passive-infrared-proximity-motion-sensor/using-a-pir&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Arduino Passive Motion Sensor (PIR) Work Book.</summary></entry><entry><title type="html">Arduino 101 Input &amp;amp; Output</title><link href="http://localhost:4000/arduino/arduino-input-output/" rel="alternate" type="text/html" title="Arduino 101 Input &amp; Output" /><published>2017-09-10T00:00:00-05:00</published><updated>2017-09-10T00:00:00-05:00</updated><id>http://localhost:4000/arduino/arduino-input-output</id><content type="html" xml:base="http://localhost:4000/arduino/arduino-input-output/">&lt;h2 id=&quot;project-kit-for-the-workbook&quot;&gt;Project Kit For the Workbook&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-10-arduino-input-output/kit.jpg&quot; alt=&quot;kit&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;bill-of-materials&quot;&gt;Bill of Materials&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;1 x Arduino Uno&lt;/li&gt;
  &lt;li&gt;1 x led&lt;/li&gt;
  &lt;li&gt;1 x 220 Ohm Resistor&lt;/li&gt;
  &lt;li&gt;2 x jumper wires&lt;/li&gt;
  &lt;li&gt;2 x regular wires&lt;/li&gt;
  &lt;li&gt;1 x push button&lt;/li&gt;
  &lt;li&gt;1 x breadboard&lt;/li&gt;
  &lt;li&gt;1 x usb type b cable&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;steps&quot;&gt;Steps&lt;/h2&gt;

&lt;p&gt;Before you begin be sure you have the &lt;a href=&quot;https://www.arduino.cc/en/Main/Software&quot;&gt;arduino ide&lt;/a&gt; installed.  You might want to review the &lt;a href=&quot;https://docs.google.com/presentation/d/1MoRwCLQkwIvOVirSYqP_qpZK4cVCWzgDfzAIcsbjcqk/edit?usp=sharing&quot;&gt;class presentation&lt;/a&gt;
if you found this on the internet.&lt;/p&gt;

&lt;p&gt;1) Go to Arduino -&amp;gt; (Preferences / Settings) and click “Display line numbers” checkbox.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-10-arduino-input-output/step1a.png&quot; alt=&quot;step1a&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-10-arduino-input-output/step1b.png&quot; alt=&quot;step1b&quot; /&gt;&lt;/p&gt;

&lt;p&gt;2) Plug the arduino into the computer.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-10-arduino-input-output/step2a.jpg&quot; alt=&quot;step2a&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-10-arduino-input-output/step2b.jpg&quot; alt=&quot;step2b&quot; /&gt;&lt;/p&gt;

&lt;p&gt;3) Go to tools -&amp;gt; boards -&amp;gt; and select the (Arduino/Genuino Uno)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-10-arduino-input-output/step3.png&quot; alt=&quot;step3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;4) Go to tools -&amp;gt; ports -&amp;gt; and select the usb port the arduino is plugged into.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-10-arduino-input-output/step4.png&quot; alt=&quot;step4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;5) Go to files -&amp;gt; examples -&amp;gt; and select blink program.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-10-arduino-input-output/step5.png&quot; alt=&quot;step5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;6) Now click the upload button on the arduino ide.  It looks like a play button.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-10-arduino-input-output/step6.png&quot; alt=&quot;step6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;7) The arduino should now blink every second.  Congrats!! You uploaded your first arduino program.  Remember that pin 13, is the built in led.  The red circle is the led attached to pin 13.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-10-arduino-input-output/step7a.jpg&quot; alt=&quot;step7a&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-10-arduino-input-output/step7b.jpg&quot; alt=&quot;step7b&quot; /&gt;&lt;/p&gt;

&lt;p&gt;8) The take breadboard and put the positive (long end) of the led into (3, f) and the short end into (5, f) of the breadboard.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-10-arduino-input-output/step8.jpg&quot; alt=&quot;step8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;9) Take the resistor and plug that into (3, g) and (1, i) of the breadboard.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-10-arduino-input-output/step9.jpg&quot; alt=&quot;step9&quot; /&gt;&lt;/p&gt;

&lt;p&gt;10) Take one jumper wire and plug it into pin (1, j) of the breadboard. Take the other jumper wire and plug it into (5,j).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-10-arduino-input-output/step10.jpg&quot; alt=&quot;step10&quot; /&gt;&lt;/p&gt;

&lt;p&gt;11) Take the jumper wire plugged into (1,j) and plug it into pin 7 of the arduino.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-10-arduino-input-output/step11.jpg&quot; alt=&quot;step11&quot; /&gt;&lt;/p&gt;

&lt;p&gt;12) Take the other jumper wire and plug it into ground of the arduino.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-10-arduino-input-output/step12.jpg&quot; alt=&quot;step12&quot; /&gt;&lt;/p&gt;

&lt;p&gt;13) Now open a new arduino sketch and paste in this code and paste the code in below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-10-arduino-input-output/step13.png&quot; alt=&quot;step13&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// This is the pin connected to the led
int led = 7;

void setup() {
  // Here we are saying that the pin will be an output pin
  // This means that this pin will output electricity.
  pinMode(led, OUTPUT);

}

void loop() {
  // This will turn the led on
  digitalWrite(led, HIGH);
  // This will make the program wait 1 second
  delay(1000);
  // This will turn the led off
  digitalWrite(led, LOW);
  // This will make the program wait another second
  delay(1000);
}

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;14) Upload the code like you did in step 6.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-10-arduino-input-output/step14a.jpg&quot; alt=&quot;step14a&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-10-arduino-input-output/step14b.jpg&quot; alt=&quot;step14b&quot; /&gt;&lt;/p&gt;

&lt;p&gt;15) Next we are going to hook up the button.  Take one end of the push button and plug that into ground (gnd).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-10-arduino-input-output/step15.jpg&quot; alt=&quot;step15&quot; /&gt;&lt;/p&gt;

&lt;p&gt;16) Plug the other wire of the button into pin 3.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-10-arduino-input-output/step16a.jpg&quot; alt=&quot;step16a&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-10-arduino-input-output/step16b.jpg&quot; alt=&quot;step16b&quot; /&gt;&lt;/p&gt;

&lt;p&gt;17) Now paste the code in below.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// This is the pin connected to the led
int led = 7;
int button = 3;

void setup() {
  // Here we are saying that the pin will be an output pin
  // This means that this pin will output electricity.
  pinMode(led, OUTPUT);
  pinMode(button, INPUT_PULLUP);
}

void loop() {

  if (digitalRead(button) == false) {
     digitalWrite(led, HIGH);
  }
  else {
     digitalWrite(led, LOW);
  }
  
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;18) Upload the code like you did in steps 6 and 14 to the arduino.  When u push the button the light should go on.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-10-arduino-input-output/step18a.jpg&quot; alt=&quot;step18a&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arduino/2017-09-10-arduino-input-output/step18b.jpg&quot; alt=&quot;step18b&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;challenge-projects&quot;&gt;Challenge Projects&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Write code so the push button can act like a light switch.  You push it once and it turns on the light and you push it again it turns off light.  So it does not require continually pushing.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Make it so that the light blinks the number of times the button has been pushed&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Just have fun and do what you want :)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;resources&quot;&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.arduino.cc&quot;&gt;https://www.arduino.cc&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://learn.adafruit.com/pir-passive-infrared-proximity-motion-sensor/how-pirs-work&quot;&gt;Passive Motion Sensor&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://create.arduino.cc/projecthub&quot;&gt;https://create.arduino.cc/projecthub&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://circuitdigest.com/arduino-projects&quot;&gt;https://circuitdigest.com/arduino-projects&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://makezine.com&quot;&gt;https://makezine.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Arduino Basic Writing C / Protocol Code.</summary></entry></feed>